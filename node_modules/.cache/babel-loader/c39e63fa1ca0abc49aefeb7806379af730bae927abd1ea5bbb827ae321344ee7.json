{"ast":null,"code":"// src/services/faqService.js\n// Stubbed FAQ service with sample data for frontend development.\n\nconst samplePerguntas = [{\n  id: 1,\n  pergunta: 'O que é este sistema?'\n}, {\n  id: 2,\n  pergunta: 'Como posso adicionar uma pergunta?'\n}, {\n  id: 3,\n  pergunta: 'Quem desenvolveu este site?'\n}];\nconst sampleRespostas = {\n  1: [{\n    id: 1,\n    resposta: 'Este sistema é um exemplo de site corporativo com React e Spring Boot.'\n  }],\n  2: [{\n    id: 2,\n    resposta: 'Você não pode adicionar perguntas no momento, pois este é um exemplo.'\n  }],\n  3: [{\n    id: 3,\n    resposta: 'Este site foi desenvolvido por Israel Duclerc e equipe.'\n  }]\n};\nexport const getPerguntas = async () => {\n  return new Promise(resolve => {\n    setTimeout(() => resolve(samplePerguntas), 500);\n  });\n};\nexport const getRespostas = async perguntaId => {\n  return new Promise(resolve => {\n    setTimeout(() => resolve(sampleRespostas[perguntaId] || []), 500);\n  });\n};","map":{"version":3,"names":["samplePerguntas","id","pergunta","sampleRespostas","resposta","getPerguntas","Promise","resolve","setTimeout","getRespostas","perguntaId"],"sources":["C:/Users/Israel Duclerc/Downloads/Projetos-Grupo4-frontend-sem-sinistros/src/services/faqService.js"],"sourcesContent":["// src/services/faqService.js\n// Stubbed FAQ service with sample data for frontend development.\n\nconst samplePerguntas = [\n  { id: 1, pergunta: 'O que é este sistema?' },\n  { id: 2, pergunta: 'Como posso adicionar uma pergunta?' },\n  { id: 3, pergunta: 'Quem desenvolveu este site?' },\n];\n\nconst sampleRespostas = {\n  1: [{ id: 1, resposta: 'Este sistema é um exemplo de site corporativo com React e Spring Boot.' }],\n  2: [{ id: 2, resposta: 'Você não pode adicionar perguntas no momento, pois este é um exemplo.' }],\n  3: [{ id: 3, resposta: 'Este site foi desenvolvido por Israel Duclerc e equipe.' }],\n};\n\nexport const getPerguntas = async () => {\n  return new Promise((resolve) => {\n    setTimeout(() => resolve(samplePerguntas), 500);\n  });\n};\n\nexport const getRespostas = async (perguntaId) => {\n  return new Promise((resolve) => {\n    setTimeout(() => resolve(sampleRespostas[perguntaId] || []), 500);\n  });\n};\n"],"mappings":"AAAA;AACA;;AAEA,MAAMA,eAAe,GAAG,CACtB;EAAEC,EAAE,EAAE,CAAC;EAAEC,QAAQ,EAAE;AAAwB,CAAC,EAC5C;EAAED,EAAE,EAAE,CAAC;EAAEC,QAAQ,EAAE;AAAqC,CAAC,EACzD;EAAED,EAAE,EAAE,CAAC;EAAEC,QAAQ,EAAE;AAA8B,CAAC,CACnD;AAED,MAAMC,eAAe,GAAG;EACtB,CAAC,EAAE,CAAC;IAAEF,EAAE,EAAE,CAAC;IAAEG,QAAQ,EAAE;EAAyE,CAAC,CAAC;EAClG,CAAC,EAAE,CAAC;IAAEH,EAAE,EAAE,CAAC;IAAEG,QAAQ,EAAE;EAAwE,CAAC,CAAC;EACjG,CAAC,EAAE,CAAC;IAAEH,EAAE,EAAE,CAAC;IAAEG,QAAQ,EAAE;EAA0D,CAAC;AACpF,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC9BC,UAAU,CAAC,MAAMD,OAAO,CAACP,eAAe,CAAC,EAAE,GAAG,CAAC;EACjD,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMS,YAAY,GAAG,MAAOC,UAAU,IAAK;EAChD,OAAO,IAAIJ,OAAO,CAAEC,OAAO,IAAK;IAC9BC,UAAU,CAAC,MAAMD,OAAO,CAACJ,eAAe,CAACO,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC;EACnE,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}